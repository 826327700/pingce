<style lang="less">
   .bg{
        background: #f5f5f5;
        min-height: 100%;
        padding-bottom: 400rpx;
    }
  .iphonex{
    padding-bottom: 50rpx;
    .form-card{
      bottom: 150rpx;
    }
  }
  .bg-wrap1{
      width: 100%;
      height: 360rpx;
      background: linear-gradient(to bottom right, #93b3f7 , #797fe9);
      color: #fff;
      text-align: center;
      padding: 40rpx 40rpx;
      box-sizing: border-box;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      .title{
          font-size: 36rpx;
          margin-bottom: 20rpx;
          margin-top: -50rpx;
      }
      .desc{
          font-size: 28rpx;
      }
  }
  .bg-wrap2{
      background: #fff;
      border-radius: 30rpx;
      margin-top: -40rpx;
      position: relative;
      box-sizing: border-box;
      padding-bottom: 40rpx;
      .avatar{
          width: 180rpx;
          height: 180rpx;
          box-shadow: 1px 2px 6px 1px 
            rgba(147, 179, 247, 0.26);
          position: absolute;
          top: -90rpx;
          left: 50%;
          transform: translateX(-50%);
          border-radius: 50%;
          background: #fff;
          overflow: hidden;
          image{
              width: 100%;
              height: 100%;
          }
      }
      .nickName{
         padding-top: 100rpx;
          text-align: center;
      }
  }
  .bg-wrap3{
      position: relative;
      margin-top: 60rpx;
      min-height: 400rpx;
      background: #fff;
      .title{
          display: inline;
          padding: 5px 20px;
          background: #93b3f7;
          border-radius: 15px;
          color: #fff;
          position: absolute;
          left: 50%;
          transform: translate(-50%,-50%);
          top: 0;
          font-size: 30rpx;
      }
      .charts{
          padding: 40rpx 0;
          .canvas{
              width: 100%;
              height: 250px;
              
          }
          .canvas-text{
              padding: 0 40rpx;
                  font-size: 32rpx;
                  span{
                      color: #93b3f7
                  }
              }
      }
      .text-wrap{
          padding: 20rpx 40rpx 20rpx 80rpx;
          
          .text-title{
              font-size: 32rpx;
              position: relative;
              .dot{
                  width: 10rpx;
                  height: 10rpx;
                  border-radius: 50%;
                  border: 2px solid #93b3f7;
                  position: absolute;
                  left:-30rpx;
                  top:14rpx;

              }
          }
          .text-content{
              margin-top: 20rpx;
              color: #999;
              font-size: 30rpx;
              .sub-title{
                  color: #444;
              }
              .sub-title:not(:first-child){
                  margin-top: 20rpx;
              }
          }
      }
  }
  .button-wrap{
      margin-top: 40rpx;
      display: flex;
      padding: 0 30rpx;
      button{
          width: 45%;
          background: linear-gradient(to bottom right, #93b3f7 , #797fe9);
      }
      .button1{
          background: #93bdf7;
          color: #fff;
      }
      .button2{
          background: #91a0ee;
          color: #fff;
      }
  }
  .button-wrap2{
      margin-top: 40rpx;
      display: flex;
      padding: 0 30rpx;
      button{
          width: 100%;
          background: linear-gradient(to bottom right, #93b3f7 , #797fe9);
      }
      .button{
          background: #93bdf7;
          color: #fff;
      }
  }
</style>
<template>
  <view class="bg {{deviceInfo=='iPhone X'?'iphonex':''}}">
      <view class="bg-wrap1">
          <view class="title">
              <text>评测结果解读</text>
          </view>
          <!-- <view class="desc">
              <text>巴拉巴拉的小描述啊小描述，巴拉巴拉的小描述啊小描述，巴拉巴拉的小描述啊小描述，巴拉巴拉的小描述啊小描述，巴拉巴拉的小描述啊小描述，</text>
          </view> -->
      </view>
      <view class="bg-wrap2">
          <view class="avatar">
              <image src="{{userInfo.avatarUrl}}"></image>
          </view>
          <view class="nickName">
              <text>{{userInfo.nickName}}</text>
          </view>
      </view>
      <view class="bg-wrap3" wx:for="{{result.items}}" wx:key="title">
          <view class="title">
              {{item.title}}
          </view>
          <view class="charts">
              <canvas canvas-id="canvas{{index}}" disable-scroll="true" class="canvas"></canvas>
              <view class="canvas-text">{{item.description?item.description:''}}</view>
          </view>
          <view class="text-wrap" wx:for="{{item.analyses}}" wx:key="*this" wx:for-item="analyse">
              <view class="text-title">
                  <view class="dot"></view>{{analyse.title}}
              </view>
              <view class="text-content">
                  <text>{{analyse.details}}</text>
              </view>
          </view>
          
      </view>

      
        <block wx:if="{{!loading}}">
      <view class="button-wrap" wx:if="{{isSelf}}">
          <button class="button1" bindtap="again">再测一次</button>
          <button class="button2" open-type="share">分享结果</button>
      </view>
      <view class="button-wrap2" wx:if="{{!isSelf}}">
          <button class="button" bindtap="goIndex">我也要测</button>
      </view>
      </block>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import * as api from '../api/api.js'
  var wxCharts = require('../components/wx-charts.js');

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '职业定位评测'
    }
    components = {
    }


    data = {
      deviceInfo:null,
      userInfo:null,
      userTestId:null,
      isSelf:false,
      result:null,
      loading:true,
    }

    methods = {
      
    }

    events = {
    }

    onLoad(params) {
        this.userTestId=params.userTestId
        this.deviceInfo=this.$parent.globalData.deviceInfo
        this.userInfo=this.$parent.globalData.userInfo
        this.getResult()
    }

    onShareAppMessage(res){
        if (res.from === 'button') {
            // 来自页面内转发按钮
            console.log(res.target)
        }
        return {
            title: this.$parent.globalData.userInfo.saveName+'的测试结果',
            path: '/pages/result?userTestId='+this.$parent.globalData.userTestId,
            success: function(res) {
                // 转发成功
                wx.showToast({
                    title: '分享成功',
                    icon: 'success',
                    duration: 2000
                })
            },
            fail: function(res) {
                if(res.errMsg=='shareAppMessage:fail cancel'){
                    return false
                }
                // 转发失败
                wx.showToast({
                    title: '分享失败，请重试',
                    icon: 'none',
                    duration: 2000
                })
            }
        }
    }

    again(){
        wx.reLaunch({
            url:'index?again=true'
        })
    }

    getResult(){
        wx.showLoading({
          title: '获取结果...',
        })
        this.loading=true
        api.gettestresult({userTestId:this.userTestId},(res)=>{
            this.loading=false
            wx.hideLoading()
            this.setData({
                result:res.data.result.testResult
            })
            this.result=res.data.result.testResult
            
            //按组绘制雷达图
            this.result.items.forEach((item,index)=>{
                let el='canvas'+index
                let radarParams=item.radarParams
                radarParams.radarMaxValue=item.radarMaxValue
                this.drawCharts(el,radarParams)
            })
            
            if(res.data.result.testResult.userId==this.userInfo.userId){
                this.isSelf=true
            }else{
                this.isSelf=false
            }
        })
    }

    goIndex(){
        wx.redirectTo({
            url: 'index'
        })
    }

    drawCharts(el,radarParams){
        let categories=radarParams.map(item=>{
            return item.name
        })
        let seriesData=radarParams.map(item=>{
            return item.value
        })
        new wxCharts({
            canvasId: el,
            type: 'radar',
            categories: categories,
            series: [{
                name: '数值结果展示',
                data: seriesData
            }],
            width: wx.getSystemInfoSync().windowWidth,
            height: 250,
            extra: {
                radar: {
                    max: radarParams.radarMaxValue,
                }
            },
        });
    }
  }
</script>
